(window.webpackJsonp=window.webpackJsonp||[]).push([[78],{149:function(e,n,t){"use strict";t.r(n),t.d(n,"frontMatter",(function(){return a})),t.d(n,"metadata",(function(){return c})),t.d(n,"toc",(function(){return s})),t.d(n,"default",(function(){return l}));var r=t(3),o=t(7),i=(t(0),t(177)),a={id:"new_introduced_contracts",title:"v2 Internal Contracts",custom_edit_url:"https://github.com/Conflux-Chain/conflux-developer-site/edit/master/docs/v2-hardfork/internal-contract.md",keywords:["internal contracts"]},c={unversionedId:"v2-hardfork/new_introduced_contracts",id:"v2-hardfork/new_introduced_contracts",isDocsHomePage:!1,title:"v2 Internal Contracts",description:"Conflux v2 hardfork has introduced two new internal contracts: ConfluxContext, PoSRegister",source:"@site/docs/v2-hardfork/internal-contract.md",sourceDirName:"v2-hardfork",slug:"/v2-hardfork/new_introduced_contracts",permalink:"/v2-hardfork/new_introduced_contracts",editUrl:"https://github.com/Conflux-Chain/conflux-developer-site/edit/master/docs/v2-hardfork/internal-contract.md",version:"current",frontMatter:{id:"new_introduced_contracts",title:"v2 Internal Contracts",custom_edit_url:"https://github.com/Conflux-Chain/conflux-developer-site/edit/master/docs/v2-hardfork/internal-contract.md",keywords:["internal contracts"]},sidebar:"docs",previous:{title:"PoS FAQs",permalink:"/v2-hardfork/pos_faqs"}},s=[{value:"ConfluxContext",id:"confluxcontext",children:[]},{value:"PoSRegister",id:"posregister",children:[]}],d={toc:s};function l(e){var n=e.components,t=Object(o.a)(e,["components"]);return Object(i.b)("wrapper",Object(r.a)({},d,t,{components:n,mdxType:"MDXLayout"}),Object(i.b)("p",null,"Conflux v2 hardfork has introduced two new internal contracts: ",Object(i.b)("inlineCode",{parentName:"p"},"ConfluxContext"),", ",Object(i.b)("inlineCode",{parentName:"p"},"PoSRegister")),Object(i.b)("h2",{id:"confluxcontext"},"ConfluxContext"),Object(i.b)("p",null,"This contract can be used to query Conflux network info including:"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"epochNumber")," - Current epoch number"),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"posHeight")," - Current block height of PoS chain"),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"finalizedEpochNumber")," - The latest finalized (by PoS chain) PoW epoch number")),Object(i.b)("p",null,Object(i.b)("inlineCode",{parentName:"p"},"ConfluxContext"),"'s hex40 contract address is ",Object(i.b)("inlineCode",{parentName:"p"},"0x0888000000000000000000000000000000000004")),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-js"},"// SPDX-License-Identifier: MIT\npragma solidity >=0.4.15;\n\ninterface ConfluxContext {\n    /*** Query Functions ***/\n    /**\n     * @dev get the current epoch number\n     * @return the current epoch number\n     */\n    function epochNumber() external view returns (uint256);\n    /**\n     * @dev get the height of the referred PoS block in the last epoch\n`    * @return the current PoS block height\n     */\n    function posHeight() external view returns (uint256);\n    /**\n     * @dev get the epoch number of the finalized pivot block.\n     * @return the finalized epoch number\n     */\n    function finalizedEpochNumber() external view returns (uint256);\n}\n\n")),Object(i.b)("h2",{id:"posregister"},"PoSRegister"),Object(i.b)("p",null,"This contract is used let user participate in PoS chain. If anyone want to become a PoS node, he need to interact with this contract. This contract provide serveral methods to increase or decrease PoS votes:"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"register")," - Regist in PoS chain to become a PoS node"),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"increaseStake")," - Increase PoS stake"),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"retire")," - Decrease PoS stake")),Object(i.b)("p",null,"Also several methods to query one account's PoS info:"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"getVotes")," - Query one account's votes info, will return ",Object(i.b)("inlineCode",{parentName:"li"},"totalStakedVotes")," and ",Object(i.b)("inlineCode",{parentName:"li"},"totalUnlockedVotes")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"identifierToAddress")," - Query one PoS account's binded PoW address"),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"addressToIdentifier")," - Query one PoW account's binded PoS address")),Object(i.b)("p",null,Object(i.b)("inlineCode",{parentName:"p"},"PoSRegister"),"'s hex40 contract address is ",Object(i.b)("inlineCode",{parentName:"p"},"0x0888000000000000000000000000000000000005")),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-js"},'// SPDX-License-Identifier: MIT\npragma solidity >=0.5.0;\n\ninterface PoSRegister {\n    /**\n     * @dev Register PoS account\n     * @param indentifier - PoS account address to register\n     * @param votePower - votes count\n     * @param blsPubKey - BLS public key\n     * @param vrfPubKey - VRF public key\n     * @param blsPubKeyProof - BLS public key\'s proof of legality, used to against some attack, generated by conflux-rust fullnode\n     */\n    function register(\n        bytes32 indentifier,\n        uint64 votePower,\n        bytes calldata blsPubKey,\n        bytes calldata vrfPubKey,\n        bytes[2] calldata blsPubKeyProof\n    ) external;\n\n    /**\n     * @dev Increase specified number votes for msg.sender\n     * @param votePower - count of votes to increase\n     */\n    function increaseStake(uint64 votePower) external;\n\n    /**\n     * @dev Retire specified number votes for msg.sender\n     * @param votePower - count of votes to retire\n     */\n    function retire(uint64 votePower) external;\n\n    /**\n     * @dev Query PoS account\'s lock info. Include "totalStakedVotes" and "totalUnlockedVotes"\n     * @param identifier - PoS address\n     */\n    function getVotes(bytes32 identifier) external view returns (uint256, uint256);\n\n    /**\n     * @dev Query the PoW address binding with specified PoS address\n     * @param identifier - PoS address\n     */\n    function identifierToAddress(bytes32 identifier) external view returns (address);\n\n    /**\n     * @dev Query the PoS address binding with specified PoW address\n     * @param addr - PoW address\n     */\n    function addressToIdentifier(address addr) external view returns (bytes32);\n\n    /**\n     * @dev Emitted when register method executed successfully\n     */\n    event Register(bytes32 indexed identifier, bytes blsPubKey, bytes vrfPubKey);\n\n    /**\n     * @dev Emitted when increaseStake method executed successfully\n     */\n    event IncreaseStake(bytes32 indexed identifier, uint64 votePower);\n\n    /**\n     * @dev Emitted when retire method executed successfully\n     */\n    event Retire(bytes32 indexed identifier, uint64 votePower);\n}\n')))}l.isMDXComponent=!0},177:function(e,n,t){"use strict";t.d(n,"a",(function(){return u})),t.d(n,"b",(function(){return f}));var r=t(0),o=t.n(r);function i(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function c(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){i(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function s(e,n){if(null==e)return{};var t,r,o=function(e,n){if(null==e)return{};var t,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var d=o.a.createContext({}),l=function(e){var n=o.a.useContext(d),t=n;return e&&(t="function"==typeof e?e(n):c(c({},n),e)),t},u=function(e){var n=l(e.components);return o.a.createElement(d.Provider,{value:n},e.children)},b={inlineCode:"code",wrapper:function(e){var n=e.children;return o.a.createElement(o.a.Fragment,{},n)}},p=o.a.forwardRef((function(e,n){var t=e.components,r=e.mdxType,i=e.originalType,a=e.parentName,d=s(e,["components","mdxType","originalType","parentName"]),u=l(t),p=r,f=u["".concat(a,".").concat(p)]||u[p]||b[p]||i;return t?o.a.createElement(f,c(c({ref:n},d),{},{components:t})):o.a.createElement(f,c({ref:n},d))}));function f(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var i=t.length,a=new Array(i);a[0]=p;var c={};for(var s in n)hasOwnProperty.call(n,s)&&(c[s]=n[s]);c.originalType=e,c.mdxType="string"==typeof e?e:r,a[1]=c;for(var d=2;d<i;d++)a[d]=t[d];return o.a.createElement.apply(null,a)}return o.a.createElement.apply(null,t)}p.displayName="MDXCreateElement"}}]);