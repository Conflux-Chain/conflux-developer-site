(window.webpackJsonp=window.webpackJsonp||[]).push([[10],{171:function(e,t,n){"use strict";n.d(t,"a",(function(){return s})),n.d(t,"b",(function(){return m}));var r=n(0),o=n.n(r);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function c(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?c(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):c(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function p(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var l=o.a.createContext({}),u=function(e){var t=o.a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},s=function(e){var t=u(e.components);return o.a.createElement(l.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return o.a.createElement(o.a.Fragment,{},t)}},b=o.a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,a=e.originalType,c=e.parentName,l=p(e,["components","mdxType","originalType","parentName"]),s=u(n),b=r,m=s["".concat(c,".").concat(b)]||s[b]||d[b]||a;return n?o.a.createElement(m,i(i({ref:t},l),{},{components:n})):o.a.createElement(m,i({ref:t},l))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var a=n.length,c=new Array(a);c[0]=b;var i={};for(var p in t)hasOwnProperty.call(t,p)&&(i[p]=t[p]);i.originalType=e,i.mdxType="string"==typeof e?e:r,c[1]=i;for(var l=2;l<a;l++)c[l]=n[l];return o.a.createElement.apply(null,c)}return o.a.createElement.apply(null,n)}b.displayName="MDXCreateElement"},73:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return c})),n.d(t,"metadata",(function(){return i})),n.d(t,"toc",(function(){return p})),n.d(t,"default",(function(){return u}));var r=n(3),o=n(7),a=(n(0),n(171)),c={id:"evm_space_networks",title:"Network endpoints",custom_edit_url:"https://github.com/Conflux-Chain/conflux-doc/edit/master/docs/EVM-Space/networks.md",keywords:["endpoint"]},i={unversionedId:"conflux-doc/docs/EVM-Space/evm_space_networks",id:"conflux-doc/docs/EVM-Space/evm_space_networks",isDocsHomePage:!1,title:"Network endpoints",description:"Ethereum Virtual Machine (EVM) support is currently available on the",source:"@site/docs/conflux-doc/docs/EVM-Space/networks.md",sourceDirName:"conflux-doc/docs/EVM-Space",slug:"/conflux-doc/docs/EVM-Space/evm_space_networks",permalink:"/conflux-doc/docs/EVM-Space/evm_space_networks",editUrl:"https://github.com/Conflux-Chain/conflux-doc/edit/master/docs/EVM-Space/networks.md",version:"current",frontMatter:{id:"evm_space_networks",title:"Network endpoints",custom_edit_url:"https://github.com/Conflux-Chain/conflux-doc/edit/master/docs/EVM-Space/networks.md",keywords:["endpoint"]},sidebar:"evmSpace",previous:{title:"Introduction",permalink:"/conflux-doc/docs/EVM-Space/intro_of_evm_space"},next:{title:"Conflux EVM Space Guide",permalink:"/v2-hardfork/evm_space_guide"}},p=[{value:"Endpoints",id:"endpoints",children:[{value:"Mainnet",id:"mainnet",children:[]},{value:"Testnet",id:"testnet",children:[]}]}],l={toc:p};function u(e){var t=e.components,n=Object(o.a)(e,["components"]);return Object(a.b)("wrapper",Object(r.a)({},l,n,{components:t,mdxType:"MDXLayout"}),Object(a.b)("p",null,"Ethereum Virtual Machine (EVM) support is currently available on the\nfollowing networks:"),Object(a.b)("div",{class:"networks-table"}),Object(a.b)("table",null,Object(a.b)("thead",{parentName:"table"},Object(a.b)("tr",{parentName:"thead"},Object(a.b)("th",{parentName:"tr",align:null},"Network"),Object(a.b)("th",{parentName:"tr",align:null},"Chain ID"),Object(a.b)("th",{parentName:"tr",align:null},"Endpoint URL"))),Object(a.b)("tbody",{parentName:"table"},Object(a.b)("tr",{parentName:"tbody"},Object(a.b)("td",{parentName:"tr",align:null},Object(a.b)("a",{parentName:"td",href:"#mainnet"},"Mainnet")),Object(a.b)("td",{parentName:"tr",align:null},"1030 (0x406)"),Object(a.b)("td",{parentName:"tr",align:null},Object(a.b)("a",{parentName:"td",href:"https://evm.confluxrpc.com"},"https://evm.confluxrpc.com"))),Object(a.b)("tr",{parentName:"tbody"},Object(a.b)("td",{parentName:"tr",align:null},Object(a.b)("a",{parentName:"td",href:"#testnet"},"Testnet")),Object(a.b)("td",{parentName:"tr",align:null},"71 (0x47)"),Object(a.b)("td",{parentName:"tr",align:null},Object(a.b)("a",{parentName:"td",href:"https://evmtest.confluxrpc.com"},"https://evmtest.confluxrpc.com"))))),Object(a.b)("h2",{id:"endpoints"},"Endpoints"),Object(a.b)("h3",{id:"mainnet"},"Mainnet"),Object(a.b)("h4",{id:"https"},"HTTPS"),Object(a.b)("p",null,"The Mainnet Web3 endpoint is at: ",Object(a.b)("inlineCode",{parentName:"p"},"https://evm.confluxrpc.com")," (port 443)"),Object(a.b)("h3",{id:"testnet"},"Testnet"),Object(a.b)("p",null,"The Testnet Web3 endpoint is at: ",Object(a.b)("inlineCode",{parentName:"p"},"https://evmtest.confluxrpc.com")," (port 443)"))}u.isMDXComponent=!0}}]);