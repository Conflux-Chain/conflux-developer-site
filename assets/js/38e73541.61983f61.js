(window.webpackJsonp=window.webpackJsonp||[]).push([[31],{100:function(e,t,a){"use strict";a.r(t),a.d(t,"frontMatter",(function(){return o})),a.d(t,"metadata",(function(){return c})),a.d(t,"toc",(function(){return l})),a.d(t,"default",(function(){return b}));var n=a(3),r=a(7),i=(a(0),a(184)),o={},c={unversionedId:"conflux-rust/changelogs/CHANGELOG-pre-0.6",id:"conflux-rust/changelogs/CHANGELOG-pre-0.6",isDocsHomePage:!1,title:"0.5.0",description:"Improvements",source:"@site/docs/conflux-rust/changelogs/CHANGELOG-pre-0.6.md",sourceDirName:"conflux-rust/changelogs",slug:"/conflux-rust/changelogs/CHANGELOG-pre-0.6",permalink:"/conflux-rust/changelogs/CHANGELOG-pre-0.6",editUrl:"https://github.com/facebook/docusaurus/edit/master/website/docs/conflux-rust/changelogs/CHANGELOG-pre-0.6.md",version:"current",frontMatter:{}},l=[{value:"Bug Fixes",id:"bug-fixes",children:[]},{value:"Improvements",id:"improvements",children:[]},{value:"Bug Fixes",id:"bug-fixes-1",children:[]},{value:"Improvements",id:"improvements-1",children:[]},{value:"EVM Updates",id:"evm-updates",children:[]},{value:"Bug Fixes",id:"bug-fixes-2",children:[]},{value:"Blockchain Core Updates (Not Backward Compatible)",id:"blockchain-core-updates-not-backward-compatible",children:[]},{value:"EVM Updates",id:"evm-updates-1",children:[]},{value:"RPC/CLI Updates",id:"rpccli-updates",children:[]},{value:"Bug Fixes",id:"bug-fixes-3",children:[]},{value:"Improvements",id:"improvements-2",children:[]}],s={toc:l};function b(e){var t=e.components,a=Object(r.a)(e,["components"]);return Object(i.b)("wrapper",Object(n.a)({},s,a,{components:t,mdxType:"MDXLayout"}),Object(i.b)("p",null,"Improvements"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("p",{parentName:"li"},"Add fields in Receipt: gas_fee, gas_sponsored, storage_sponsored. Accumulate gas_used in Receipt, not gas_charged.")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("p",{parentName:"li"},"Delay block requests when we cannot process them to avoid wasting network bandwidth.")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("p",{parentName:"li"},"Set block gas limit for Genesis block to 30_000_000.")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("p",{parentName:"li"},"Define gas_used to be transaction gas limit for NotEnoughCash, the same as all other exceptions.")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("p",{parentName:"li"},"Add support for WebSockets in RPC.")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("p",{parentName:"li"},"cfx_gasPrice will return a price with at least 1000000000, i.e. 1GDrip.")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("p",{parentName:"li"},"Move getstatus RPC from test to common, and renamed with cfx_getStatus."))),Object(i.b)("h2",{id:"bug-fixes"},"Bug Fixes"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("p",{parentName:"li"},"Fix UnexpectedResponse from honest peers that causes peer demotion.")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("p",{parentName:"li"},"Remove some untrue debug assert.")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("p",{parentName:"li"},"Forbidden CALLCODE and DELEGATECALL to internal contracts.")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("p",{parentName:"li"},"RPC now returns the correct rlp size of the block")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("p",{parentName:"li"},"Fix a race condition that may cause optimistic execution to panic.")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("p",{parentName:"li"},"Fill in correct block gas limit value for mining.")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("p",{parentName:"li"},"Fix definitions and logics in transaction early execution error checking.")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("p",{parentName:"li"},"Use block_count - 1 in target difficulty calculation because it's the unbiased estimation of exponential distribution parameter (past mining power)."))),Object(i.b)("h2",{id:"improvements"},"Improvements"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("p",{parentName:"li"},"Add cfx_getConfirmationRiskByHash RPC to get confirmation risk by block hash.")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("p",{parentName:"li"},"Add getTransactionsFromPool debug RPC to collect transactions in pool."))),Object(i.b)("h1",{id:"040"},"0.4.0"),Object(i.b)("h2",{id:"bug-fixes-1"},"Bug Fixes"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("p",{parentName:"li"},"Fix a potential crash bug in the transaction pool compoenent")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("p",{parentName:"li"},"Stop marking OverlayAccount dirty on read access. This will influnce the state root. ")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("p",{parentName:"li"},"Do not mark OverlayAccount dirty in sub_balance 0 for non-existence account.")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("p",{parentName:"li"},"Add missing transaction verifications for invalid block."))),Object(i.b)("h2",{id:"improvements-1"},"Improvements"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("p",{parentName:"li"},"Improve the transaction address check at RPC")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("p",{parentName:"li"},"Change the test net PoW to use double keccak"))),Object(i.b)("h2",{id:"evm-updates"},"EVM Updates"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("p",{parentName:"li"},"Decide the storage owner (who is responsible for storage collateral) at the beginning of the transaction. ")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("p",{parentName:"li"},"Only check the storage limit and balance for storage collateral at the end of EVM execution. "))),Object(i.b)("h1",{id:"032"},"0.3.2"),Object(i.b)("h2",{id:"bug-fixes-2"},"Bug Fixes"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("p",{parentName:"li"},"Fix an issue that GetBlockHashesByEpoch containing blocks before checkpoint may cause the node to crash.")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("p",{parentName:"li"},"Quick fix for possible duplicate block inserted into the consensus worker thread."))),Object(i.b)("h1",{id:"030"},"0.3.0"),Object(i.b)("h2",{id:"blockchain-core-updates-not-backward-compatible"},"Blockchain Core Updates (Not Backward Compatible)"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("p",{parentName:"li"},"Changes the address scheme of Conflux. All normal address now start with 0x1.\nAll smart contracts address now start with 0x8. Note that your private key will\nstill work as long as you replace the first character in your hex address with\n",Object(i.b)("inlineCode",{parentName:"p"},"0x1"),". For example, if your address is 0x7b5c..., after this update your\naddress will change to 0x1b5c...")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("p",{parentName:"li"},"Changes the state Merkle root calculation method. Merkle is calculated based\non constructed raw keccak input byte string instead of serialized rlp; checks if\ncompressed_path starts on the second nibble of a byte; makes sure that with the\nconstructed keccak input string adversary cannot construct a compressed path to\ncreate a path Merkle of the same value as a node Merkle.")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("p",{parentName:"li"},"Each epoch now has a limit of executing 200 blocks. If there are more than\n200 blocks in an epoch. Only the last 200 blocks will be executed. This change\nis designed to battle DoS attacks about hiding and generating a lot of blocks\nsuddenly.")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("p",{parentName:"li"},"Add storage_root support in Conflux MPT. Define storage root as the Merkle\nroot computed on the account's storage subtree root node, ignoring the\ncompressed path; 2) force the storage root node to existing by setting a\nStorageLayout value at the storage node. "))),Object(i.b)("p",null,"You need to use new SDK tools to connect with the main chain, otherwise your\ntransaction will be rejected as invalid. "),Object(i.b)("h2",{id:"evm-updates-1"},"EVM Updates"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"Change the gas used in SSTORE operation to 5000 gas, no matter the zero-ness\nis changed or not. And we no longer refund gas in releasing storage entry. ")),Object(i.b)("h2",{id:"rpccli-updates"},"RPC/CLI Updates"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("p",{parentName:"li"},"Change the CLI interface subcommand from ",Object(i.b)("inlineCode",{parentName:"p"},"debug")," to ",Object(i.b)("inlineCode",{parentName:"p"},"local"),". Its\nfunctionality remains the same.")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("p",{parentName:"li"},"Add a RPC cfx_getSkippedBlocksByEpoch to query skipped blocks of an epoch")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("p",{parentName:"li"},"Add a corresponding CLI interface to query skipped blocks via local RPC")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("p",{parentName:"li"},"Refactor RPC interface now most RPC takes HEX parameters and returns HEX"))),Object(i.b)("h2",{id:"bug-fixes-3"},"Bug Fixes"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("p",{parentName:"li"},"Fix an issue that may cause the P2P layer to not propagate out-of-era blocks properly")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("p",{parentName:"li"},"Fix an issue that Conflux RPC may return incorrect estimate.")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("p",{parentName:"li"},"Fix an issue that virtual call RPC may fail if the caller does not have enough balance")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("p",{parentName:"li"},"Fix an issue that failing to send a pending request can make a block not received.")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("p",{parentName:"li"},"Fix an issue that not-graph-ready compact blocks are not fully received."))),Object(i.b)("h2",{id:"improvements-2"},"Improvements"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"Make the consensus layer to prioritize meaningful blocks first. It will\nimprove the overall performance in facing of DoS attacks. It will also\nprioritize self-mined blocks as a desirable effect.")))}b.isMDXComponent=!0},184:function(e,t,a){"use strict";a.d(t,"a",(function(){return p})),a.d(t,"b",(function(){return d}));var n=a(0),r=a.n(n);function i(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function o(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function c(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?o(Object(a),!0).forEach((function(t){i(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):o(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function l(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},i=Object.keys(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var s=r.a.createContext({}),b=function(e){var t=r.a.useContext(s),a=t;return e&&(a="function"==typeof e?e(t):c(c({},t),e)),a},p=function(e){var t=b(e.components);return r.a.createElement(s.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.a.createElement(r.a.Fragment,{},t)}},m=r.a.forwardRef((function(e,t){var a=e.components,n=e.mdxType,i=e.originalType,o=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),p=b(a),m=n,d=p["".concat(o,".").concat(m)]||p[m]||u[m]||i;return a?r.a.createElement(d,c(c({ref:t},s),{},{components:a})):r.a.createElement(d,c({ref:t},s))}));function d(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var i=a.length,o=new Array(i);o[0]=m;var c={};for(var l in t)hasOwnProperty.call(t,l)&&(c[l]=t[l]);c.originalType=e,c.mdxType="string"==typeof e?e:n,o[1]=c;for(var s=2;s<i;s++)o[s]=a[s];return r.a.createElement.apply(null,o)}return r.a.createElement.apply(null,a)}m.displayName="MDXCreateElement"}}]);