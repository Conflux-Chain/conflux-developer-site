(window.webpackJsonp=window.webpackJsonp||[]).push([[43],{114:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return o})),n.d(t,"metadata",(function(){return c})),n.d(t,"toc",(function(){return l})),n.d(t,"default",(function(){return p}));var r=n(3),i=n(7),a=(n(0),n(176)),o={id:"upgrade_list",title:"Upgraded CIPs",custom_edit_url:"https://github.com/Conflux-Chain/conflux-developer-site/edit/master/docs/v2-hardfork/upgrade-list.md",keywords:["CIPs"]},c={unversionedId:"v2-hardfork/upgrade_list",id:"v2-hardfork/upgrade_list",isDocsHomePage:!1,title:"Upgraded CIPs",description:"This hardfork Conflux activate and implement modifications of 7 different CIPs (improvement proposal) including cip-43, cip-64, cip-71, cip-72, cip-76, cip-78 and cip-86. The following is a brief introduction of these CIPs.",source:"@site/docs/v2-hardfork/upgrade-list.md",sourceDirName:"v2-hardfork",slug:"/v2-hardfork/upgrade_list",permalink:"/v2-hardfork/upgrade_list",editUrl:"https://github.com/Conflux-Chain/conflux-developer-site/edit/master/docs/v2-hardfork/upgrade-list.md",version:"current",frontMatter:{id:"upgrade_list",title:"Upgraded CIPs",custom_edit_url:"https://github.com/Conflux-Chain/conflux-developer-site/edit/master/docs/v2-hardfork/upgrade-list.md",keywords:["CIPs"]},sidebar:"docs",previous:{title:"Tools",permalink:"/sdks-and-tools/en/conflux_tools"},next:{title:"Conflux PoS hardfork overview",permalink:"/v2-hardfork/pos_overview"}},l=[{value:"Included CIPs",id:"included-cips",children:[{value:"CIP-43",id:"cip-43",children:[]},{value:"CIP-64",id:"cip-64",children:[]},{value:"CIP-71",id:"cip-71",children:[]},{value:"CIP-72",id:"cip-72",children:[]},{value:"CIP-76",id:"cip-76",children:[]},{value:"CIP-78",id:"cip-78",children:[]},{value:"CIP-86",id:"cip-86",children:[]}]},{value:"Testnet Upgrade schedule",id:"testnet-upgrade-schedule",children:[]}],s={toc:l};function p(e){var t=e.components,n=Object(i.a)(e,["components"]);return Object(a.b)("wrapper",Object(r.a)({},s,n,{components:t,mdxType:"MDXLayout"}),Object(a.b)("p",null,"This hardfork Conflux activate and implement modifications of 7 different CIPs (improvement proposal) including cip-43, cip-64, cip-71, cip-72, cip-76, cip-78 and cip-86. The following is a brief introduction of these CIPs."),Object(a.b)("h2",{id:"included-cips"},"Included CIPs"),Object(a.b)("h3",{id:"cip-43"},"CIP-43"),Object(a.b)("p",null,"Detail link: ",Object(a.b)("a",{parentName:"p",href:"https://github.com/Conflux-Chain/CIPs/blob/master/CIPs/cip-43.md"},"https://github.com/Conflux-Chain/CIPs/blob/master/CIPs/cip-43.md")),Object(a.b)("p",null,"In this CIP, we propose introducing finality to the Conflux chain via voting among staked CFX holders. This will increase the confidence of high-value transactions happening on Conflux in the future and protect Conflux against potential 51% attacks from PoW."),Object(a.b)("h3",{id:"cip-64"},"CIP-64"),Object(a.b)("p",null,"Detail link: ",Object(a.b)("a",{parentName:"p",href:"https://github.com/Conflux-Chain/CIPs/blob/master/CIPs/cip-64.md"},"https://github.com/Conflux-Chain/CIPs/blob/master/CIPs/cip-64.md")),Object(a.b)("p",null,"Currently, transactions on Conflux have no direct access to the number of the epoch they are executed in. To maintain EVM compatibility, this CIP introduces a new internal contract that makes this information available to contracts."),Object(a.b)("h3",{id:"cip-71"},"CIP-71"),Object(a.b)("p",null,"Detail link: ",Object(a.b)("a",{parentName:"p",href:"https://github.com/Conflux-Chain/CIPs/blob/master/CIPs/cip-71.md"},"https://github.com/Conflux-Chain/CIPs/blob/master/CIPs/cip-71.md")),Object(a.b)("p",null,"Fully disable the anti-reentrancy for their contract."),Object(a.b)("h3",{id:"cip-72"},"CIP-72"),Object(a.b)("p",null,"Detail link: ",Object(a.b)("a",{parentName:"p",href:"https://github.com/Conflux-Chain/CIPs/blob/master/CIPs/cip-72.md"},"https://github.com/Conflux-Chain/CIPs/blob/master/CIPs/cip-72.md")),Object(a.b)("p",null,"Make Conflux accepts the signatures signed by Ethereum's wallets, such as Metamask. "),Object(a.b)("h3",{id:"cip-76"},"CIP-76"),Object(a.b)("p",null,"Detail link: ",Object(a.b)("a",{parentName:"p",href:"https://github.com/Conflux-Chain/CIPs/blob/master/CIPs/cip-76.md"},"https://github.com/Conflux-Chain/CIPs/blob/master/CIPs/cip-76.md")),Object(a.b)("p",null,"We should remove VM-related constraints in syncing blocks, like requiring the transactions to have enough gas limit."),Object(a.b)("h3",{id:"cip-78"},"CIP-78"),Object(a.b)("p",null,"Detail link: ",Object(a.b)("a",{parentName:"p",href:"https://github.com/Conflux-Chain/CIPs/blob/master/CIPs/cip-78.md"},"https://github.com/Conflux-Chain/CIPs/blob/master/CIPs/cip-78.md")),Object(a.b)("p",null,"Fix incorrect fields in transaction receipt."),Object(a.b)("h3",{id:"cip-86"},"CIP-86"),Object(a.b)("p",null,"Detail link: ",Object(a.b)("a",{parentName:"p",href:"https://github.com/Conflux-Chain/CIPs/blob/master/CIPs/cip-86.md"},"https://github.com/Conflux-Chain/CIPs/blob/master/CIPs/cip-86.md")),Object(a.b)("p",null,"Reduce the period of difficulty adjustment and apply the simple moving average method."),Object(a.b)("h2",{id:"testnet-upgrade-schedule"},"Testnet Upgrade schedule"),Object(a.b)("ol",null,Object(a.b)("li",{parentName:"ol"},"Conflux client program need to be updated before ",Object(a.b)("inlineCode",{parentName:"li"},"Epoch Number reaches 55095000")," or ",Object(a.b)("inlineCode",{parentName:"li"},"Block Number reaches 68845000")," (around 10:00 Dec.9th, 2021(GMT+8))"),Object(a.b)("li",{parentName:"ol"},"The PoS registration start at ",Object(a.b)("inlineCode",{parentName:"li"},"Block Number 68845000")," (around Dec.9th at 10:00)"),Object(a.b)("li",{parentName:"ol"},"The PoS registration close at ",Object(a.b)("inlineCode",{parentName:"li"},"Block Number 69245000")," (around Dec.11 at 18:00)"),Object(a.b)("li",{parentName:"ol"},"The deadline for adding pos_config is before ",Object(a.b)("inlineCode",{parentName:"li"},"Epoch Number reaches 55665000")," (around Dec.13th 15:00). Hardfork upgrade completed at this time.")),Object(a.b)("p",null,"For detail infomation check ",Object(a.b)("a",{parentName:"p",href:"https://forum.conflux.fun/t/conflux-v2-0-0-testnet-hardfork-upgrade-announcement/12556"},"Conflux v2.0.0-testnet Hardfork Upgrade Announcement")))}p.isMDXComponent=!0},176:function(e,t,n){"use strict";n.d(t,"a",(function(){return u})),n.d(t,"b",(function(){return h}));var r=n(0),i=n.n(r);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function c(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var s=i.a.createContext({}),p=function(e){var t=i.a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):c(c({},t),e)),n},u=function(e){var t=p(e.components);return i.a.createElement(s.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return i.a.createElement(i.a.Fragment,{},t)}},b=i.a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,a=e.originalType,o=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),u=p(n),b=r,h=u["".concat(o,".").concat(b)]||u[b]||d[b]||a;return n?i.a.createElement(h,c(c({ref:t},s),{},{components:n})):i.a.createElement(h,c({ref:t},s))}));function h(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var a=n.length,o=new Array(a);o[0]=b;var c={};for(var l in t)hasOwnProperty.call(t,l)&&(c[l]=t[l]);c.originalType=e,c.mdxType="string"==typeof e?e:r,o[1]=c;for(var s=2;s<a;s++)o[s]=n[s];return i.a.createElement.apply(null,o)}return i.a.createElement.apply(null,n)}b.displayName="MDXCreateElement"}}]);