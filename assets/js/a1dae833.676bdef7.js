(window.webpackJsonp=window.webpackJsonp||[]).push([[82],{153:function(e,n,t){"use strict";t.r(n),t.d(n,"frontMatter",(function(){return i})),t.d(n,"metadata",(function(){return c})),t.d(n,"toc",(function(){return s})),t.d(n,"default",(function(){return d}));var r=t(3),a=t(7),o=(t(0),t(182)),i={id:"new_introduced_contracts",title:"V2 InternalContracts",custom_edit_url:"https://github.com/Conflux-Chain/conflux-developer-site/edit/master/docs/v2-hardfork/internal-contract.md",keywords:["internal contracts"]},c={unversionedId:"v2-hardfork/new_introduced_contracts",id:"v2-hardfork/new_introduced_contracts",isDocsHomePage:!1,title:"V2 InternalContracts",description:"Conflux v2 hardfork has introduced three new internal contracts: ConfluxContext, PoSRegister, CrossSpaceCall",source:"@site/docs/v2-hardfork/internal-contract.md",sourceDirName:"v2-hardfork",slug:"/v2-hardfork/new_introduced_contracts",permalink:"/v2-hardfork/new_introduced_contracts",editUrl:"https://github.com/Conflux-Chain/conflux-developer-site/edit/master/docs/v2-hardfork/internal-contract.md",version:"current",frontMatter:{id:"new_introduced_contracts",title:"V2 InternalContracts",custom_edit_url:"https://github.com/Conflux-Chain/conflux-developer-site/edit/master/docs/v2-hardfork/internal-contract.md",keywords:["internal contracts"]},sidebar:"docs",previous:{title:"PoS FAQs",permalink:"/v2-hardfork/pos_faqs"},next:{title:"Get Conflux Client",permalink:"/run-a-node/en/how_to_get"}},s=[{value:"ConfluxContext",id:"confluxcontext",children:[]},{value:"PoSRegister",id:"posregister",children:[]},{value:"CrossSpaceCall",id:"crossspacecall",children:[]}],l={toc:s};function d(e){var n=e.components,t=Object(a.a)(e,["components"]);return Object(o.b)("wrapper",Object(r.a)({},l,t,{components:n,mdxType:"MDXLayout"}),Object(o.b)("p",null,"Conflux v2 hardfork has introduced three new internal contracts: ",Object(o.b)("inlineCode",{parentName:"p"},"ConfluxContext"),", ",Object(o.b)("inlineCode",{parentName:"p"},"PoSRegister"),", ",Object(o.b)("inlineCode",{parentName:"p"},"CrossSpaceCall")),Object(o.b)("h2",{id:"confluxcontext"},"ConfluxContext"),Object(o.b)("p",null,"This contract can be used to query Conflux network info including:"),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},Object(o.b)("inlineCode",{parentName:"li"},"epochNumber")," - Current epoch number"),Object(o.b)("li",{parentName:"ul"},Object(o.b)("inlineCode",{parentName:"li"},"posHeight")," - Current block height of PoS chain"),Object(o.b)("li",{parentName:"ul"},Object(o.b)("inlineCode",{parentName:"li"},"finalizedEpochNumber")," - The latest finalized (by PoS chain) PoW epoch number")),Object(o.b)("p",null,Object(o.b)("inlineCode",{parentName:"p"},"ConfluxContext"),"'s hex40 contract address is ",Object(o.b)("inlineCode",{parentName:"p"},"0x0888000000000000000000000000000000000004")),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-js"},"// SPDX-License-Identifier: MIT\npragma solidity >=0.4.15;\n\ninterface ConfluxContext {\n    /*** Query Functions ***/\n    /**\n     * @dev get the current epoch number\n     * @return the current epoch number\n     */\n    function epochNumber() external view returns (uint256);\n    /**\n     * @dev get the height of the referred PoS block in the last epoch\n`    * @return the current PoS block height\n     */\n    function posHeight() external view returns (uint256);\n    /**\n     * @dev get the epoch number of the finalized pivot block.\n     * @return the finalized epoch number\n     */\n    function finalizedEpochNumber() external view returns (uint256);\n}\n\n")),Object(o.b)("h2",{id:"posregister"},"PoSRegister"),Object(o.b)("p",null,"This contract is used let user participate in PoS chain. If anyone want to become a PoS node, he need to interact with this contract. This contract provide serveral methods to increase or decrease PoS votes:"),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},Object(o.b)("inlineCode",{parentName:"li"},"register")," - Regist in PoS chain to become a PoS node"),Object(o.b)("li",{parentName:"ul"},Object(o.b)("inlineCode",{parentName:"li"},"increaseStake")," - Increase PoS stake"),Object(o.b)("li",{parentName:"ul"},Object(o.b)("inlineCode",{parentName:"li"},"retire")," - Decrease PoS stake")),Object(o.b)("p",null,"Also several methods to query one account's PoS info:"),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},Object(o.b)("inlineCode",{parentName:"li"},"getVotes")," - Query one account's votes info, will return ",Object(o.b)("inlineCode",{parentName:"li"},"totalStakedVotes")," and ",Object(o.b)("inlineCode",{parentName:"li"},"totalUnlockedVotes")),Object(o.b)("li",{parentName:"ul"},Object(o.b)("inlineCode",{parentName:"li"},"identifierToAddress")," - Query one PoS account's binded PoW address"),Object(o.b)("li",{parentName:"ul"},Object(o.b)("inlineCode",{parentName:"li"},"addressToIdentifier")," - Query one PoW account's binded PoS address")),Object(o.b)("p",null,Object(o.b)("inlineCode",{parentName:"p"},"PoSRegister"),"'s hex40 contract address is ",Object(o.b)("inlineCode",{parentName:"p"},"0x0888000000000000000000000000000000000005")),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-js"},'// SPDX-License-Identifier: MIT\npragma solidity >=0.5.0;\n\ninterface PoSRegister {\n    /**\n     * @dev Register PoS account\n     * @param indentifier - PoS account address to register\n     * @param votePower - votes count\n     * @param blsPubKey - BLS public key\n     * @param vrfPubKey - VRF public key\n     * @param blsPubKeyProof - BLS public key\'s proof of legality, used to against some attack, generated by conflux-rust fullnode\n     */\n    function register(\n        bytes32 indentifier,\n        uint64 votePower,\n        bytes calldata blsPubKey,\n        bytes calldata vrfPubKey,\n        bytes[2] calldata blsPubKeyProof\n    ) external;\n\n    /**\n     * @dev Increase specified number votes for msg.sender\n     * @param votePower - count of votes to increase\n     */\n    function increaseStake(uint64 votePower) external;\n\n    /**\n     * @dev Retire specified number votes for msg.sender\n     * @param votePower - count of votes to retire\n     */\n    function retire(uint64 votePower) external;\n\n    /**\n     * @dev Query PoS account\'s lock info. Include "totalStakedVotes" and "totalUnlockedVotes"\n     * @param identifier - PoS address\n     */\n    function getVotes(bytes32 identifier) external view returns (uint256, uint256);\n\n    /**\n     * @dev Query the PoW address binding with specified PoS address\n     * @param identifier - PoS address\n     */\n    function identifierToAddress(bytes32 identifier) external view returns (address);\n\n    /**\n     * @dev Query the PoS address binding with specified PoW address\n     * @param addr - PoW address\n     */\n    function addressToIdentifier(address addr) external view returns (bytes32);\n\n    /**\n     * @dev Emitted when register method executed successfully\n     */\n    event Register(bytes32 indexed identifier, bytes blsPubKey, bytes vrfPubKey);\n\n    /**\n     * @dev Emitted when increaseStake method executed successfully\n     */\n    event IncreaseStake(bytes32 indexed identifier, uint64 votePower);\n\n    /**\n     * @dev Emitted when retire method executed successfully\n     */\n    event Retire(bytes32 indexed identifier, uint64 votePower);\n}\n')),Object(o.b)("h2",{id:"crossspacecall"},"CrossSpaceCall"),Object(o.b)("p",null,"A new internal contract called the ",Object(o.b)("inlineCode",{parentName:"p"},"CrossSpaceCall")," contract will be deployed at the address ",Object(o.b)("inlineCode",{parentName:"p"},"0x0888000000000000000000000000000000000006")," with the following interfaces. The Core space user/contract can interact with the accounts in the eSpace and process the return value in the same transaction. So the cross-space operations can be atomic."),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-js"},"// SPDX-License-Identifier: MIT\npragma solidity >=0.5.0;\n\ninterface CrossSpaceCall {\n\n    event Call(bytes20 indexed sender, bytes20 indexed receiver, uint256 value, uint256 nonce, bytes data);\n\n    event Create(bytes20 indexed sender, bytes20 indexed contract_address, uint256 value, uint256 nonce, bytes init);\n\n    event Withdraw(bytes20 indexed sender, address indexed receiver, uint256 value, uint256 nonce);\n\n    event Outcome(bool success);\n\n    function createEVM(bytes calldata init) external payable returns (bytes20);\n    \n    function transferEVM(bytes20 to) external payable returns (bytes memory output);\n\n    function callEVM(bytes20 to, bytes calldata data) external payable returns (bytes memory output);\n\n    function staticCallEVM(bytes20 to, bytes calldata data) external view returns (bytes memory output);\n\n    function withdrawFromMapped(uint256 value) external;\n\n    function mappedBalance(address addr) external view returns (uint256);\n\n    function mappedNonce(address addr) external view returns (uint256);\n}\n")))}d.isMDXComponent=!0},182:function(e,n,t){"use strict";t.d(n,"a",(function(){return u})),t.d(n,"b",(function(){return f}));var r=t(0),a=t.n(r);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function c(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function s(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var l=a.a.createContext({}),d=function(e){var n=a.a.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):c(c({},n),e)),t},u=function(e){var n=d(e.components);return a.a.createElement(l.Provider,{value:n},e.children)},b={inlineCode:"code",wrapper:function(e){var n=e.children;return a.a.createElement(a.a.Fragment,{},n)}},p=a.a.forwardRef((function(e,n){var t=e.components,r=e.mdxType,o=e.originalType,i=e.parentName,l=s(e,["components","mdxType","originalType","parentName"]),u=d(t),p=r,f=u["".concat(i,".").concat(p)]||u[p]||b[p]||o;return t?a.a.createElement(f,c(c({ref:n},l),{},{components:t})):a.a.createElement(f,c({ref:n},l))}));function f(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var o=t.length,i=new Array(o);i[0]=p;var c={};for(var s in n)hasOwnProperty.call(n,s)&&(c[s]=n[s]);c.originalType=e,c.mdxType="string"==typeof e?e:r,i[1]=c;for(var l=2;l<o;l++)i[l]=t[l];return a.a.createElement.apply(null,i)}return a.a.createElement.apply(null,t)}p.displayName="MDXCreateElement"}}]);