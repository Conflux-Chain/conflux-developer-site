(window.webpackJsonp=window.webpackJsonp||[]).push([[51],{122:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return l})),n.d(t,"metadata",(function(){return o})),n.d(t,"toc",(function(){return c})),n.d(t,"default",(function(){return d}));var i=n(3),a=n(7),r=(n(0),n(191)),l={},o={unversionedId:"conflux-rust/changelogs/JSONRPC",id:"conflux-rust/changelogs/JSONRPC",isDocsHomePage:!1,title:"JSON-RPC CHANGELOG",description:"v2.2.2",source:"@site/docs/conflux-rust/changelogs/JSONRPC.md",sourceDirName:"conflux-rust/changelogs",slug:"/conflux-rust/changelogs/JSONRPC",permalink:"/conflux-rust/changelogs/JSONRPC",editUrl:"https://github.com/facebook/docusaurus/edit/master/website/docs/conflux-rust/changelogs/JSONRPC.md",version:"current",frontMatter:{}},c=[{value:"v2.2.1",id:"v221",children:[]},{value:"v2.2.0",id:"v220",children:[]},{value:"v2.1.1",id:"v211",children:[]},{value:"v2.1.0",id:"v210",children:[]},{value:"v2.0.3",id:"v203",children:[]},{value:"v2.0.2",id:"v202",children:[{value:"eSpace",id:"espace",children:[]},{value:"Core Space",id:"core-space",children:[]}]},{value:"v2.0.1",id:"v201",children:[]}],b={toc:c};function d(e){var t=e.components,n=Object(a.a)(e,["components"]);return Object(r.b)("wrapper",Object(i.a)({},b,n,{components:t,mdxType:"MDXLayout"}),Object(r.b)("p",null,"v2.2.2"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},"A new scheme for epoch parameter like ",Object(r.b)("a",{parentName:"li",href:"https://eips.ethereum.org/EIPS/eip-1898"},"EIP-1898"),", which has 3 optional fields:",Object(r.b)("ul",{parentName:"li"},Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"epochNumber"),". Corresponding to ",Object(r.b)("inlineCode",{parentName:"li"},"blockNumber")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"blockHash"),". Same as EIP-1898 ",Object(r.b)("inlineCode",{parentName:"li"},"blockHash")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"requirePivot"),". Corresponding to ",Object(r.b)("inlineCode",{parentName:"li"},"requireCanonical"),". And according to previous behaviour (including espace ",Object(r.b)("inlineCode",{parentName:"li"},"eth_call")," and core space ",Object(r.b)("inlineCode",{parentName:"li"},"EpochReceipt"),"), this value will default to ",Object(r.b)("inlineCode",{parentName:"li"},"true")))),Object(r.b)("li",{parentName:"ul"},"Add filter RPCs in core space including ",Object(r.b)("inlineCode",{parentName:"li"},"cfx_newFilter"),", ",Object(r.b)("inlineCode",{parentName:"li"},"cfx_newBlockFilter"),", ",Object(r.b)("inlineCode",{parentName:"li"},"cfx_newPendingTransactionFilter"),", ",Object(r.b)("inlineCode",{parentName:"li"},"cfx_getFilterChanges"),", ",Object(r.b)("inlineCode",{parentName:"li"},"cfx_getFilterLogs"),", ",Object(r.b)("inlineCode",{parentName:"li"},"cfx_uninstallFilter")),Object(r.b)("li",{parentName:"ul"},"Add a new RPC ",Object(r.b)("inlineCode",{parentName:"li"},"pos_getAccountByPowAddress")," to get pos account from pow address")),Object(r.b)("h2",{id:"v221"},"v2.2.1"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},"Fix ",Object(r.b)("inlineCode",{parentName:"li"},"pending")," tag behaviour in espace. Now ",Object(r.b)("inlineCode",{parentName:"li"},"pending")," tag will be considered as ",Object(r.b)("inlineCode",{parentName:"li"},"latest")," tag except for ",Object(r.b)("inlineCode",{parentName:"li"},"eth_getTransactionCount"),"."),Object(r.b)("li",{parentName:"ul"},"Fix ",Object(r.b)("inlineCode",{parentName:"li"},"cfx_getDepositList")," and ",Object(r.b)("inlineCode",{parentName:"li"},"cfx_getVoteList")," return value format.")),Object(r.b)("h2",{id:"v220"},"v2.2.0"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},"Support ",Object(r.b)("inlineCode",{parentName:"li"},"safe")," and ",Object(r.b)("inlineCode",{parentName:"li"},"finalized")," block tag in espace.",Object(r.b)("ul",{parentName:"li"},Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"safe")," block number corresponds to ",Object(r.b)("inlineCode",{parentName:"li"},"latest_confirmed")," and ",Object(r.b)("inlineCode",{parentName:"li"},"finalized")," corresponds to ",Object(r.b)("inlineCode",{parentName:"li"},"latest_finalized"))))),Object(r.b)("h2",{id:"v211"},"v2.1.1"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},"Add filter RPCs in eSpace including ",Object(r.b)("inlineCode",{parentName:"li"},"eth_newFilter"),", ",Object(r.b)("inlineCode",{parentName:"li"},"eth_newBlockFilter"),", ",Object(r.b)("inlineCode",{parentName:"li"},"eth_newPendingTransactionFilter"),", ",Object(r.b)("inlineCode",{parentName:"li"},"eth_getFilterLogs"),", ",Object(r.b)("inlineCode",{parentName:"li"},"eth_getFilterChanges"),", ",Object(r.b)("inlineCode",{parentName:"li"},"eth_uninstallFilter"))),Object(r.b)("h2",{id:"v210"},"v2.1.0"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},"Support ",Object(r.b)("inlineCode",{parentName:"li"},"eth_subscribe")," and ",Object(r.b)("inlineCode",{parentName:"li"},"eth_unsubscribe")," in eSpace RPCs."),Object(r.b)("li",{parentName:"ul"},"Add an RPC method ",Object(r.b)("a",{parentName:"li",href:"https://developer.confluxnetwork.org/conflux-doc/docs/json_rpc#cfx_getparamsfromvote"},Object(r.b)("inlineCode",{parentName:"a"},"cfx_getParamsFromVote"))," to return the currently used value of the voted parameters."),Object(r.b)("li",{parentName:"ul"},"Return null for getting skipped transactions and receipts. Whether they will be returned was nondeterministic before, but now they are ensured to be null."),Object(r.b)("li",{parentName:"ul"},"When querying logs, use LatestState instead of the to epoch number when the to epoch number is greater than LatestState")),Object(r.b)("h2",{id:"v203"},"v2.0.3"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"cfx_getLogs")," and ",Object(r.b)("inlineCode",{parentName:"li"},"eth_getLogs")," will no longer support the parameters limit and offset. They are not efficient and can be replaced by setting the block/epoch range instead."),Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"cfx_clientVersion")," will have included more information like ",Object(r.b)("inlineCode",{parentName:"li"},"web3_clientVersion")," in eSpace."),Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"fromEpoch"),' will default to "latest_state" in ',Object(r.b)("inlineCode",{parentName:"li"},"cfx_getLogs"),"."),Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"fromBlock"),' will default to "latest" in ',Object(r.b)("inlineCode",{parentName:"li"},"eth_getLogs"),".")),Object(r.b)("h2",{id:"v202"},"v2.0.2"),Object(r.b)("h3",{id:"espace"},"eSpace"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},"Add a new RPC ",Object(r.b)("inlineCode",{parentName:"li"},"eth_getAccountPendingTransactions")," to get pending transactions by address, also return the first pending transaction's pending reason"),Object(r.b)("li",{parentName:"ul"},"Support WebSockets for eth APIs"),Object(r.b)("li",{parentName:"ul"},"Support block hash param for ",Object(r.b)("inlineCode",{parentName:"li"},"eth_call")," (EIP1898)"),Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"eth_call"),", ",Object(r.b)("inlineCode",{parentName:"li"},"eth_estimate")," will respect ",Object(r.b)("inlineCode",{parentName:"li"},"from"),"'s balance if passed, if balance is not enough will return error. If from is not passed then use a random one, which balance will be very big."),Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"eth_sendRawTransaction")," will reject transaction if sender's balance is not enough, return error like ",Object(r.b)("inlineCode",{parentName:"li"},"Transaction {:?} is discarded due to out of balance, needs {:?} but account balance is {:?}")),Object(r.b)("li",{parentName:"ul"},"If ",Object(r.b)("inlineCode",{parentName:"li"},"eth_call"),", ",Object(r.b)("inlineCode",{parentName:"li"},"eth_estimate")," method call raise error, and the ",Object(r.b)("inlineCode",{parentName:"li"},"error.data")," is string, it will directly return. In version before v2.0.2 they are hex encoded, is not convenient.")),Object(r.b)("h3",{id:"core-space"},"Core Space"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"cfx_call"),", ",Object(r.b)("inlineCode",{parentName:"li"},"cfx_estimateGasAndCollateral")," will respect ",Object(r.b)("inlineCode",{parentName:"li"},"from"),"'s balance if passed, if balance is not enough will return error. If from is not passed then use a random one, which balance will be very big."),Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"cfx_sendRawTransaction")," will reject transaction if sender's balance is not enough, return error like ",Object(r.b)("inlineCode",{parentName:"li"},"Transaction {:?} is discarded due to out of balance, needs {:?} but account balance is {:?}")),Object(r.b)("li",{parentName:"ul"},"If ",Object(r.b)("inlineCode",{parentName:"li"},"cfx_call"),", ",Object(r.b)("inlineCode",{parentName:"li"},"cfx_estimateGasAndCollateral")," method call raise error, and the ",Object(r.b)("inlineCode",{parentName:"li"},"error.data")," is string, it will directly return. In version before v2.0.2 they are hex encoded, is not convenient.")),Object(r.b)("h2",{id:"v201"},"v2.0.1"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},"Report error in ",Object(r.b)("inlineCode",{parentName:"li"},"cfx_getLogs")," and ",Object(r.b)("inlineCode",{parentName:"li"},"eth_getLogs")," if ",Object(r.b)("inlineCode",{parentName:"li"},"get_logs_filter_max_limit")," is configured but the query would return more logs. The previous behavior of ",Object(r.b)("inlineCode",{parentName:"li"},"cfx_getLogs")," was to silently truncate the result. The previous behavior of ",Object(r.b)("inlineCode",{parentName:"li"},"eth_getLogs")," was to raise an error when ",Object(r.b)("inlineCode",{parentName:"li"},"filter.limit")," is too low, regardless of how many logs the query would result in."),Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"eth_gasPrice")," now estimate gas prices accurately instead of returning a fixed value."),Object(r.b)("li",{parentName:"ul"},"Support phantom transactions and return correct fields in eSpace ",Object(r.b)("inlineCode",{parentName:"li"},"trace")," RPCs."),Object(r.b)("li",{parentName:"ul"},"Add fields ",Object(r.b)("inlineCode",{parentName:"li"},"valid")," and ",Object(r.b)("inlineCode",{parentName:"li"},"createType")," for eSpace ",Object(r.b)("inlineCode",{parentName:"li"},"trace")," RPCs."),Object(r.b)("li",{parentName:"ul"},"Add RPC ",Object(r.b)("inlineCode",{parentName:"li"},"rpc_methods")," to return all available methods and ",Object(r.b)("inlineCode",{parentName:"li"},"rpc_modules")," to return all RPC modules."),Object(r.b)("li",{parentName:"ul"},"Add ",Object(r.b)("inlineCode",{parentName:"li"},"totalEspaceTokens")," in the response of ",Object(r.b)("inlineCode",{parentName:"li"},"cfx_getSupplyInfo"),"."),Object(r.b)("li",{parentName:"ul"},"Add local RPCs ",Object(r.b)("inlineCode",{parentName:"li"},"pos_start_voting"),", ",Object(r.b)("inlineCode",{parentName:"li"},"pos_stop_voting"),", and ",Object(r.b)("inlineCode",{parentName:"li"},"pos_voting_status"),". Check #2438 for details.")))}d.isMDXComponent=!0},191:function(e,t,n){"use strict";n.d(t,"a",(function(){return p})),n.d(t,"b",(function(){return m}));var i=n(0),a=n.n(i);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,i)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,i,a=function(e,t){if(null==e)return{};var n,i,a={},r=Object.keys(e);for(i=0;i<r.length;i++)n=r[i],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(i=0;i<r.length;i++)n=r[i],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var b=a.a.createContext({}),d=function(e){var t=a.a.useContext(b),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},p=function(e){var t=d(e.components);return a.a.createElement(b.Provider,{value:t},e.children)},s={inlineCode:"code",wrapper:function(e){var t=e.children;return a.a.createElement(a.a.Fragment,{},t)}},u=a.a.forwardRef((function(e,t){var n=e.components,i=e.mdxType,r=e.originalType,l=e.parentName,b=c(e,["components","mdxType","originalType","parentName"]),p=d(n),u=i,m=p["".concat(l,".").concat(u)]||p[u]||s[u]||r;return n?a.a.createElement(m,o(o({ref:t},b),{},{components:n})):a.a.createElement(m,o({ref:t},b))}));function m(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var r=n.length,l=new Array(r);l[0]=u;var o={};for(var c in t)hasOwnProperty.call(t,c)&&(o[c]=t[c]);o.originalType=e,o.mdxType="string"==typeof e?e:i,l[1]=o;for(var b=2;b<r;b++)l[b]=n[b];return a.a.createElement.apply(null,l)}return a.a.createElement.apply(null,n)}u.displayName="MDXCreateElement"}}]);