(window.webpackJsonp=window.webpackJsonp||[]).push([[87],{158:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return i})),n.d(t,"metadata",(function(){return c})),n.d(t,"toc",(function(){return l})),n.d(t,"default",(function(){return s}));var r=n(3),a=n(7),o=(n(0),n(192)),i={id:"hardfork_v2.1.0_overview",title:"Overview",custom_edit_url:"https://github.com/Conflux-Chain/conflux-developer-site/edit/master/docs/v2-hardfork/overview.md",keywords:["CIPs","HardFork"]},c={unversionedId:"v2.1-hardfork/hardfork_v2.1.0_overview",id:"v2.1-hardfork/hardfork_v2.1.0_overview",isDocsHomePage:!1,title:"Overview",description:"Conflux-Rust v2.1.0 is a small hardfork upgrade. In this upgrade 4 new CIPs will be activate, and also some improvement about storage and RPC.",source:"@site/docs/v2.1-hardfork/overview.md",sourceDirName:"v2.1-hardfork",slug:"/v2.1-hardfork/hardfork_v2.1.0_overview",permalink:"/v2.1-hardfork/hardfork_v2.1.0_overview",editUrl:"https://github.com/Conflux-Chain/conflux-developer-site/edit/master/docs/v2-hardfork/overview.md",version:"current",frontMatter:{id:"hardfork_v2.1.0_overview",title:"Overview",custom_edit_url:"https://github.com/Conflux-Chain/conflux-developer-site/edit/master/docs/v2-hardfork/overview.md",keywords:["CIPs","HardFork"]},sidebar:"docs",previous:{title:"V2 InternalContracts",permalink:"/v2-hardfork/new_introduced_contracts"},next:{title:"Get Conflux Client",permalink:"/run-a-node/en/how_to_get"}},l=[{value:"New CIPs",id:"new-cips",children:[]},{value:"New InternalContract",id:"new-internalcontract",children:[]},{value:"Improvements",id:"improvements",children:[{value:"Storage",id:"storage",children:[]},{value:"RPC",id:"rpc",children:[]}]},{value:"Update schedule",id:"update-schedule",children:[{value:"Mainnet",id:"mainnet",children:[]},{value:"Testnet",id:"testnet",children:[]}]},{value:"Additional links",id:"additional-links",children:[]}],d={toc:l};function s(e){var t=e.components,n=Object(a.a)(e,["components"]);return Object(o.b)("wrapper",Object(r.a)({},d,n,{components:t,mdxType:"MDXLayout"}),Object(o.b)("p",null,"Conflux-Rust v2.1.0 is a small hardfork upgrade. In this upgrade 4 new CIPs will be activate, and also some improvement about storage and RPC."),Object(o.b)("h2",{id:"new-cips"},"New CIPs"),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},Object(o.b)("a",{parentName:"li",href:"https://github.com/Conflux-Chain/CIPs/blob/master/CIPs/cip-94.md"},"CIP-94"),": proposes to use on-chain DAO voting to decide and update reward parameters without hardfork."),Object(o.b)("li",{parentName:"ul"},Object(o.b)("a",{parentName:"li",href:"https://github.com/Conflux-Chain/CIPs/blob/master/CIPs/cip-97.md"},"CIP-97"),": proposes to remove account's staking lists."),Object(o.b)("li",{parentName:"ul"},Object(o.b)("a",{parentName:"li",href:"https://github.com/Conflux-Chain/CIPs/blob/master/CIPs/cip-98.md"},"CIP-98"),": Fix a bug in BLOCKHASH opcode in eSpace."),Object(o.b)("li",{parentName:"ul"},Object(o.b)("a",{parentName:"li",href:"https://github.com/Conflux-Chain/CIPs/blob/master/CIPs/cip-99.md"},"CIP-99"),": Allow more not-voting terms before we force-retire a node, and make the unlock period of a retiring node shorter to allow the node to rejoin the PoS voting faster.")),Object(o.b)("h2",{id:"new-internalcontract"},"New InternalContract"),Object(o.b)("p",null,"CIP-94 also has introduce a new InternalContract ",Object(o.b)("inlineCode",{parentName:"p"},"ParamControl")," at hex address ",Object(o.b)("inlineCode",{parentName:"p"},"0x0888000000000000000000000000000000000007"),". This contract can be used to retrive parameter info and participate in DAO vote."),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-js"},"// SPDX-License-Identifier: MIT\n\npragma solidity >=0.8.0;\n\ninterface ParamsControl {\n    struct Vote {\n        uint16 topic_index;\n        uint256[3] votes;\n    }\n\n    /*** Query Functions ***/\n    /**\n     * @dev cast vote for parameters\n     * @param vote_round The round to vote for\n     * @param vote_data The list of votes to cast\n     */\n    function castVote(uint64 vote_round, Vote[] calldata vote_data) external;\n\n    /**\n     * @dev read the vote data of an account\n     * @param addr The address of the account to read\n     */\n    function readVote(address addr) external view returns (Vote[] memory);\n\n    /**\n     * @dev Current vote round\n     */\n    function currentRound() external view returns (uint64);\n\n    /**\n     * @dev read the total votes of given round\n     * @param vote_round The vote number\n     */\n    function totalVotes(uint64 vote_round) external view returns (Vote[] memory);\n\n    event CastVote(uint64 indexed vote_round, address indexed addr, uint16 indexed topic_index, uint256[3] votes);\n    event RevokeVote(uint64 indexed vote_round, address indexed addr, uint16 indexed topic_index, uint256[3] votes);\n}\n")),Object(o.b)("h2",{id:"improvements"},"Improvements"),Object(o.b)("h3",{id:"storage"},"Storage"),Object(o.b)("p",null,"Allow snapshots to be removed during recovery. This reduces the disk space requirement for full node sync or recovery."),Object(o.b)("p",null,"In v2.1.0 Conflux-Rust also brought support for ",Object(o.b)("inlineCode",{parentName:"p"},"fullstate query"),", which means we can query state at any blockchain height. For example we can query an address ",Object(o.b)("inlineCode",{parentName:"p"},"cfx:aaketjh9tkj5g2k4zx3kfvb9vkku8nr956n0en4fhe"),"'s balance at height ",Object(o.b)("inlineCode",{parentName:"p"},"100000")," with method ",Object(o.b)("inlineCode",{parentName:"p"},"cfx_getBalance")," by specifying the second parameter."),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-shell"},'curl --location --request POST \'https://main.confluxrpc.com\' \\\n--header \'Content-Type: application/json\' \\\n--data-raw \' {\n    "jsonrpc": "2.0",\n    "id": "15922956697249514502",\n    "method": "cfx_getBalance",\n    "params": [\n        "cfx:aaketjh9tkj5g2k4zx3kfvb9vkku8nr956n0en4fhe",\n        "0x186a0"\n    ]\n  }\'\n')),Object(o.b)("p",null,"To support conflux fullstate query, a archive node with configuration ",Object(o.b)("inlineCode",{parentName:"p"},"enable_single_mpt_storage")," enabled is required. And the node need sync data from genesis to construct all the history states. Besides nodes can also set ",Object(o.b)("inlineCode",{parentName:"p"},'single_mpt_space = "evm"')," to only store eSpace states."),Object(o.b)("h3",{id:"rpc"},"RPC"),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},"Support ",Object(o.b)("inlineCode",{parentName:"li"},"eth_subscribe")," and ",Object(o.b)("inlineCode",{parentName:"li"},"eth_unsubscribe")," in eSpace RPCs."),Object(o.b)("li",{parentName:"ul"},"Add a RPC method ",Object(o.b)("inlineCode",{parentName:"li"},"cfx_getParamsFromVote")," to return the currently used value of the voted parameters."),Object(o.b)("li",{parentName:"ul"},"Return null for getting skipped transactions and receipts. Whether they will be returned was nondeterministic before, but now they are ensured to be null.")),Object(o.b)("h2",{id:"update-schedule"},"Update schedule"),Object(o.b)("h3",{id:"mainnet"},"Mainnet"),Object(o.b)("p",null,"TD"),Object(o.b)("h3",{id:"testnet"},"Testnet"),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},"v2.1.0 hardfork ",Object(o.b)("inlineCode",{parentName:"li"},"epochNumber")," has been set to ",Object(o.b)("inlineCode",{parentName:"li"},"88100000")," (around 22:00 Aug.17th, 2022(GMT+8))"),Object(o.b)("li",{parentName:"ul"},"CIP-94 activate ",Object(o.b)("inlineCode",{parentName:"li"},"blockNumber")," is ",Object(o.b)("inlineCode",{parentName:"li"},"112400000")),Object(o.b)("li",{parentName:"ul"},"CIP-99 activate ",Object(o.b)("inlineCode",{parentName:"li"},"PoS blockNumber")," is ",Object(o.b)("inlineCode",{parentName:"li"},"342000"))),Object(o.b)("h2",{id:"additional-links"},"Additional links"),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},Object(o.b)("a",{parentName:"li",href:"https://forum.conflux.fun/t/conflux-v2-1-0-testnet-testnet-upgrade-announcement/16075"},"Testnet update announcement")),Object(o.b)("li",{parentName:"ul"},Object(o.b)("a",{parentName:"li",href:"https://test.confluxhub.io/governance/dashboard"},"Testnet governance dApp")),Object(o.b)("li",{parentName:"ul"},Object(o.b)("a",{parentName:"li",href:"https://github.com/Conflux-Chain/conflux-rust/releases/tag/v2.1.0-testnet"},"Conflux-rust v2.1.0 testnet release"))))}s.isMDXComponent=!0},192:function(e,t,n){"use strict";n.d(t,"a",(function(){return u})),n.d(t,"b",(function(){return m}));var r=n(0),a=n.n(r);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function c(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var d=a.a.createContext({}),s=function(e){var t=a.a.useContext(d),n=t;return e&&(n="function"==typeof e?e(t):c(c({},t),e)),n},u=function(e){var t=s(e.components);return a.a.createElement(d.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return a.a.createElement(a.a.Fragment,{},t)}},b=a.a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,i=e.parentName,d=l(e,["components","mdxType","originalType","parentName"]),u=s(n),b=r,m=u["".concat(i,".").concat(b)]||u[b]||p[b]||o;return n?a.a.createElement(m,c(c({ref:t},d),{},{components:n})):a.a.createElement(m,c({ref:t},d))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,i=new Array(o);i[0]=b;var c={};for(var l in t)hasOwnProperty.call(t,l)&&(c[l]=t[l]);c.originalType=e,c.mdxType="string"==typeof e?e:r,i[1]=c;for(var d=2;d<o;d++)i[d]=n[d];return a.a.createElement.apply(null,i)}return a.a.createElement.apply(null,n)}b.displayName="MDXCreateElement"}}]);